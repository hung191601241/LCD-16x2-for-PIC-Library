

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 29 10:39:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0006                     _PORTB	set	6
   171  0007                     _PORTC	set	7
   172  0032                     _RB2	set	50
   173  0031                     _RB1	set	49
   174  0030                     _RB0	set	48
   175  0087                     _TRISC	set	135
   176  0086                     _TRISB	set	134
   177                           
   178                           	psect	strings
   179  0003                     __pstrings:
   180  0003                     stringtab:
   181  0003                     __stringtab:
   182  0003                     stringcode:	
   183                           ;	String table - string pointers are 1 byte each
   184                           
   185  0003                     stringdir:
   186  0003  3000               	movlw	high stringdir
   187  0004  008A               	movwf	10
   188  0005  0804               	movf	4,w
   189  0006  0A84               	incf	4,f
   190  0007  0782               	addwf	2,f
   191  0008                     __stringbase:
   192  0008  3400               	retlw	0
   193  0009                     __end_of__stringtab:
   194  0009                     STR_1:
   195  0009  3456               	retlw	86	;'V'
   196  000A  3469               	retlw	105	;'i'
   197  000B  3465               	retlw	101	;'e'
   198  000C  3474               	retlw	116	;'t'
   199  000D  3420               	retlw	32	;' '
   200  000E  3448               	retlw	72	;'H'
   201  000F  3475               	retlw	117	;'u'
   202  0010  346E               	retlw	110	;'n'
   203  0011  3467               	retlw	103	;'g'
   204  0012  3400               	retlw	0
   205                           
   206                           	psect	cinit
   207  07FC                     start_initialization:	
   208                           ; #config settings
   209                           
   210  07FC                     __initialization:
   211  07FC                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214  07FC                     __end_of__initialization:
   215  07FC  0183               	clrf	3
   216  07FD  120A  118A  2F80   	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	cstackCOMMON
   219  0070                     __pcstackCOMMON:
   220  0070                     ?_LCD_Command:
   221  0070                     ??_LCD_Command:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ?_LCD_Data_Char:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ??_LCD_Data_Char:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ?_LCD_Data_String:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?_lcd_init:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ?_main:	
   237                           ; 1 bytes @ 0x0
   238                           
   239                           
   240                           ; 1 bytes @ 0x0
   241  0070                     	ds	2
   242  0072                     LCD_Command@command:
   243  0072                     LCD_Data_Char@data:	
   244                           ; 1 bytes @ 0x2
   245                           
   246                           
   247                           ; 1 bytes @ 0x2
   248  0072                     	ds	1
   249  0073                     ??_LCD_Data_String:
   250  0073                     ?_lcd_gotoxy:	
   251                           ; 1 bytes @ 0x3
   252                           
   253  0073                     ??_lcd_init:	
   254                           ; 1 bytes @ 0x3
   255                           
   256  0073                     LCD_Data_String@i:	
   257                           ; 1 bytes @ 0x3
   258                           
   259  0073                     lcd_gotoxy@x:	
   260                           ; 2 bytes @ 0x3
   261                           
   262                           
   263                           ; 2 bytes @ 0x3
   264  0073                     	ds	2
   265  0075                     LCD_Data_String@str:
   266  0075                     lcd_gotoxy@y:	
   267                           ; 1 bytes @ 0x5
   268                           
   269                           
   270                           ; 2 bytes @ 0x5
   271  0075                     	ds	2
   272  0077                     ??_lcd_gotoxy:
   273  0077                     ??_main:	
   274                           ; 1 bytes @ 0x7
   275                           
   276                           
   277                           	psect	maintext
   278  0780                     __pmaintext:	
   279                           ; 1 bytes @ 0x7
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 77 in file "LCD_8bit.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : B00/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   299 ;;      Params:         0       0       0       0       0
   300 ;;      Locals:         0       0       0       0       0
   301 ;;      Temps:          0       0       0       0       0
   302 ;;      Totals:         0       0       0       0       0
   303 ;;Total ram usage:        0 bytes
   304 ;; Hardware stack levels required when called: 2
   305 ;; This function calls:
   306 ;;		_LCD_Data_String
   307 ;;		_lcd_gotoxy
   308 ;;		_lcd_init
   309 ;; This function is called by:
   310 ;;		Startup code after reset
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           
   315                           ;psect for function _main
   316  0780                     _main:
   317  0780                     l714:	
   318                           ;incstack = 0
   319                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   320                           
   321                           
   322                           ;LCD_8bit.c: 79:     TRISB=0; PORTB=0;
   323  0780  1683               	bsf	3,5	;RP0=1, select bank1
   324  0781  1303               	bcf	3,6	;RP1=0, select bank1
   325  0782  0186               	clrf	6	;volatile
   326  0783  1283               	bcf	3,5	;RP0=0, select bank0
   327  0784  1303               	bcf	3,6	;RP1=0, select bank0
   328  0785  0186               	clrf	6	;volatile
   329                           
   330                           ;LCD_8bit.c: 80:     TRISC=0; PORTC=0;
   331  0786  1683               	bsf	3,5	;RP0=1, select bank1
   332  0787  1303               	bcf	3,6	;RP1=0, select bank1
   333  0788  0187               	clrf	7	;volatile
   334  0789  1283               	bcf	3,5	;RP0=0, select bank0
   335  078A  1303               	bcf	3,6	;RP1=0, select bank0
   336  078B  0187               	clrf	7	;volatile
   337  078C                     l716:
   338                           
   339                           ;LCD_8bit.c: 82:     lcd_init();
   340  078C  120A  118A  2719  120A  118A  	fcall	_lcd_init
   341  0791                     l718:
   342                           
   343                           ;LCD_8bit.c: 83:     lcd_gotoxy(1,5);
   344  0791  3001               	movlw	1
   345  0792  00F3               	movwf	lcd_gotoxy@x
   346  0793  3000               	movlw	0
   347  0794  00F4               	movwf	lcd_gotoxy@x+1
   348  0795  3005               	movlw	5
   349  0796  00F5               	movwf	lcd_gotoxy@y
   350  0797  3000               	movlw	0
   351  0798  00F6               	movwf	lcd_gotoxy@y+1
   352  0799  120A  118A  27A8  120A  118A  	fcall	_lcd_gotoxy
   353  079E                     l720:
   354                           
   355                           ;LCD_8bit.c: 84:     LCD_Data_String("Viet Hung");
   356  079E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   357  079F  120A  118A  275B  120A  118A  	fcall	_LCD_Data_String
   358  07A4                     l41:	
   359                           ;LCD_8bit.c: 85:     while(1)
   360                           
   361  07A4                     l42:	
   362                           ;LCD_8bit.c: 86:     {;LCD_8bit.c: 88:     }
   363                           
   364  07A4  2FA4               	goto	l41
   365  07A5  120A  118A  2800   	ljmp	start
   366  07A8                     __end_of_main:
   367                           
   368                           	psect	text1
   369  0719                     __ptext1:	
   370 ;; *************** function _lcd_init *****************
   371 ;; Defined at:
   372 ;;		line 71 in file "LCD_8bit.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, status,2, status,0, pclath, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   386 ;;      Params:         0       0       0       0       0
   387 ;;      Locals:         0       0       0       0       0
   388 ;;      Temps:          0       0       0       0       0
   389 ;;      Totals:         0       0       0       0       0
   390 ;;Total ram usage:        0 bytes
   391 ;; Hardware stack levels used: 1
   392 ;; Hardware stack levels required when called: 1
   393 ;; This function calls:
   394 ;;		_LCD_Command
   395 ;; This function is called by:
   396 ;;		_main
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           
   401                           ;psect for function _lcd_init
   402  0719                     _lcd_init:
   403  0719                     l680:	
   404                           ;incstack = 0
   405                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   406                           
   407                           
   408                           ;LCD_8bit.c: 73:     LCD_Command(0x38);
   409  0719  3038               	movlw	56
   410  071A  120A  118A  2743  120A  118A  	fcall	_LCD_Command
   411                           
   412                           ;LCD_8bit.c: 74:     LCD_Command(0x0C);
   413  071F  300C               	movlw	12
   414  0720  120A  118A  2743  120A  118A  	fcall	_LCD_Command
   415                           
   416                           ;LCD_8bit.c: 75:     LCD_Command(0x01);
   417  0725  3001               	movlw	1
   418  0726  120A  118A  2743  120A  118A  	fcall	_LCD_Command
   419  072B                     l36:
   420  072B  0008               	return
   421  072C                     __end_of_lcd_init:
   422                           
   423                           	psect	text2
   424  07A8                     __ptext2:	
   425 ;; *************** function _lcd_gotoxy *****************
   426 ;; Defined at:
   427 ;;		line 64 in file "LCD_8bit.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;  x               2    3[COMMON] int 
   430 ;;  y               2    5[COMMON] int 
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   442 ;;      Params:         4       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0
   445 ;;      Totals:         4       0       0       0       0
   446 ;;Total ram usage:        4 bytes
   447 ;; Hardware stack levels used: 1
   448 ;; Hardware stack levels required when called: 1
   449 ;; This function calls:
   450 ;;		_LCD_Command
   451 ;; This function is called by:
   452 ;;		_main
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           
   457                           ;psect for function _lcd_gotoxy
   458  07A8                     _lcd_gotoxy:
   459  07A8                     l698:	
   460                           ;incstack = 0
   461                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   462                           
   463                           
   464                           ;LCD_8bit.c: 64: void lcd_gotoxy(int x, int y);LCD_8bit.c: 65: {;LCD_8bit.c: 66:     if(
      +                          x==1 && y>0 && y<=16)
   465  07A8  0373               	decf	lcd_gotoxy@x,w
   466  07A9  0474               	iorwf	lcd_gotoxy@x+1,w
   467  07AA  1D03               	btfss	3,2
   468  07AB  2FAD               	goto	u91
   469  07AC  2FAE               	goto	u90
   470  07AD                     u91:
   471  07AD  2FD1               	goto	l706
   472  07AE                     u90:
   473  07AE                     l700:
   474  07AE  0876               	movf	lcd_gotoxy@y+1,w
   475  07AF  3A80               	xorlw	128
   476  07B0  00FF               	movwf	btemp+1
   477  07B1  3080               	movlw	128
   478  07B2  027F               	subwf	btemp+1,w
   479  07B3  1D03               	skipz
   480  07B4  2FB7               	goto	u105
   481  07B5  3001               	movlw	1
   482  07B6  0275               	subwf	lcd_gotoxy@y,w
   483  07B7                     u105:
   484  07B7  1C03               	skipc
   485  07B8  2FBA               	goto	u101
   486  07B9  2FBB               	goto	u100
   487  07BA                     u101:
   488  07BA  2FD1               	goto	l706
   489  07BB                     u100:
   490  07BB                     l702:
   491  07BB  0876               	movf	lcd_gotoxy@y+1,w
   492  07BC  3A80               	xorlw	128
   493  07BD  00FF               	movwf	btemp+1
   494  07BE  3080               	movlw	128
   495  07BF  027F               	subwf	btemp+1,w
   496  07C0  1D03               	skipz
   497  07C1  2FC4               	goto	u115
   498  07C2  3011               	movlw	17
   499  07C3  0275               	subwf	lcd_gotoxy@y,w
   500  07C4                     u115:
   501  07C4  1803               	skipnc
   502  07C5  2FC7               	goto	u111
   503  07C6  2FC8               	goto	u110
   504  07C7                     u111:
   505  07C7  2FD1               	goto	l706
   506  07C8                     u110:
   507  07C8                     l704:
   508                           
   509                           ;LCD_8bit.c: 67:         LCD_Command((y-1 & 0x0F) + 0x80);
   510  07C8  0875               	movf	lcd_gotoxy@y,w
   511  07C9  3EFF               	addlw	255
   512  07CA  390F               	andlw	15
   513  07CB  3E80               	addlw	128
   514  07CC  120A  118A  2743  120A  118A  	fcall	_LCD_Command
   515  07D1                     l706:
   516                           
   517                           ;LCD_8bit.c: 68:     if(x==2 && y>0 && y<=16)
   518  07D1  3002               	movlw	2
   519  07D2  0673               	xorwf	lcd_gotoxy@x,w
   520  07D3  0474               	iorwf	lcd_gotoxy@x+1,w
   521  07D4  1D03               	btfss	3,2
   522  07D5  2FD7               	goto	u121
   523  07D6  2FD8               	goto	u120
   524  07D7                     u121:
   525  07D7  2FFB               	goto	l33
   526  07D8                     u120:
   527  07D8                     l708:
   528  07D8  0876               	movf	lcd_gotoxy@y+1,w
   529  07D9  3A80               	xorlw	128
   530  07DA  00FF               	movwf	btemp+1
   531  07DB  3080               	movlw	128
   532  07DC  027F               	subwf	btemp+1,w
   533  07DD  1D03               	skipz
   534  07DE  2FE1               	goto	u135
   535  07DF  3001               	movlw	1
   536  07E0  0275               	subwf	lcd_gotoxy@y,w
   537  07E1                     u135:
   538  07E1  1C03               	skipc
   539  07E2  2FE4               	goto	u131
   540  07E3  2FE5               	goto	u130
   541  07E4                     u131:
   542  07E4  2FFB               	goto	l33
   543  07E5                     u130:
   544  07E5                     l710:
   545  07E5  0876               	movf	lcd_gotoxy@y+1,w
   546  07E6  3A80               	xorlw	128
   547  07E7  00FF               	movwf	btemp+1
   548  07E8  3080               	movlw	128
   549  07E9  027F               	subwf	btemp+1,w
   550  07EA  1D03               	skipz
   551  07EB  2FEE               	goto	u145
   552  07EC  3011               	movlw	17
   553  07ED  0275               	subwf	lcd_gotoxy@y,w
   554  07EE                     u145:
   555  07EE  1803               	skipnc
   556  07EF  2FF1               	goto	u141
   557  07F0  2FF2               	goto	u140
   558  07F1                     u141:
   559  07F1  2FFB               	goto	l33
   560  07F2                     u140:
   561  07F2                     l712:
   562                           
   563                           ;LCD_8bit.c: 69:         LCD_Command((y-1 & 0x0F) + 0xC0);
   564  07F2  0875               	movf	lcd_gotoxy@y,w
   565  07F3  3EFF               	addlw	255
   566  07F4  390F               	andlw	15
   567  07F5  3EC0               	addlw	192
   568  07F6  120A  118A  2743  120A  118A  	fcall	_LCD_Command
   569  07FB                     l33:
   570  07FB  0008               	return
   571  07FC                     __end_of_lcd_gotoxy:
   572                           
   573                           	psect	text3
   574  0743                     __ptext3:	
   575 ;; *************** function _LCD_Command *****************
   576 ;; Defined at:
   577 ;;		line 33 in file "LCD_8bit.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  command         1    wreg     unsigned char 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  command         1    2[COMMON] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         1       0       0       0       0
   593 ;;      Temps:          2       0       0       0       0
   594 ;;      Totals:         3       0       0       0       0
   595 ;;Total ram usage:        3 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_lcd_gotoxy
   601 ;;		_lcd_init
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           
   606                           ;psect for function _LCD_Command
   607  0743                     _LCD_Command:
   608                           
   609                           ;incstack = 0
   610                           ; Regs used in _LCD_Command: [wreg]
   611                           ;LCD_Command@command stored from wreg
   612  0743  00F2               	movwf	LCD_Command@command
   613  0744                     l636:
   614                           
   615                           ;LCD_8bit.c: 33: void LCD_Command(unsigned char command);LCD_8bit.c: 34: {;LCD_8bit.c: 3
      +                          5:     RB0=0;
   616  0744  1283               	bcf	3,5	;RP0=0, select bank0
   617  0745  1303               	bcf	3,6	;RP1=0, select bank0
   618  0746  1006               	bcf	6,0	;volatile
   619                           
   620                           ;LCD_8bit.c: 36:     RB1=0;
   621  0747  1086               	bcf	6,1	;volatile
   622  0748                     l638:
   623                           
   624                           ;LCD_8bit.c: 37:     PORTC=command;
   625  0748  0872               	movf	LCD_Command@command,w
   626  0749  0087               	movwf	7	;volatile
   627  074A                     l640:
   628                           
   629                           ;LCD_8bit.c: 38:     RB2=1;
   630  074A  1506               	bsf	6,2	;volatile
   631  074B                     l642:
   632                           
   633                           ;LCD_8bit.c: 39:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   634  074B  2F4C               	nop2	;2 cycle nop
   635  074C  2F4D               	nop2	;2 cycle nop
   636  074D  0000               	nop
   637  074E                     l644:
   638                           
   639                           ;LCD_8bit.c: 40:     RB2=0;
   640  074E  1283               	bcf	3,5	;RP0=0, select bank0
   641  074F  1303               	bcf	3,6	;RP1=0, select bank0
   642  0750  1106               	bcf	6,2	;volatile
   643                           
   644                           ;LCD_8bit.c: 41:     _delay((unsigned long)((3)*(20000000/4000.0)));
   645  0751  3014               	movlw	20
   646  0752  00F1               	movwf	??_LCD_Command+1
   647  0753  3079               	movlw	121
   648  0754  00F0               	movwf	??_LCD_Command
   649  0755                     u157:
   650  0755  0BF0               	decfsz	??_LCD_Command,f
   651  0756  2F55               	goto	u157
   652  0757  0BF1               	decfsz	??_LCD_Command+1,f
   653  0758  2F55               	goto	u157
   654  0759  2F5A               	nop2
   655  075A                     l19:
   656  075A  0008               	return
   657  075B                     __end_of_LCD_Command:
   658                           
   659                           	psect	text4
   660  075B                     __ptext4:	
   661 ;; *************** function _LCD_Data_String *****************
   662 ;; Defined at:
   663 ;;		line 56 in file "LCD_8bit.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;  str             1    wreg     PTR unsigned char 
   666 ;;		 -> STR_1(10), 
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  str             1    5[COMMON] PTR unsigned char 
   669 ;;		 -> STR_1(10), 
   670 ;;  i               2    3[COMMON] int 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   680 ;;      Params:         0       0       0       0       0
   681 ;;      Locals:         3       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0
   683 ;;      Totals:         3       0       0       0       0
   684 ;;Total ram usage:        3 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; Hardware stack levels required when called: 1
   687 ;; This function calls:
   688 ;;		_LCD_Data_Char
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function _LCD_Data_String
   696  075B                     _LCD_Data_String:
   697                           
   698                           ;incstack = 0
   699                           ; Regs used in _LCD_Data_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   700                           ;LCD_Data_String@str stored from wreg
   701  075B  00F5               	movwf	LCD_Data_String@str
   702  075C                     l690:
   703                           
   704                           ;LCD_8bit.c: 56: void LCD_Data_String(char *str);LCD_8bit.c: 57: {;LCD_8bit.c: 58:     i
      +                          nt i;;LCD_8bit.c: 59:     for(i=0; str[i]!=0; i++)
   705  075C  01F3               	clrf	LCD_Data_String@i
   706  075D  01F4               	clrf	LCD_Data_String@i+1
   707  075E  2F72               	goto	l696
   708  075F                     l692:
   709                           
   710                           ;LCD_8bit.c: 60:     {;LCD_8bit.c: 61:         LCD_Data_Char(str[i]);
   711  075F  0873               	movf	LCD_Data_String@i,w
   712  0760  0775               	addwf	LCD_Data_String@str,w
   713  0761  0084               	movwf	4
   714  0762  120A  118A  2003  120A  118A  	fcall	stringdir
   715  0767  120A  118A  272C  120A  118A  	fcall	_LCD_Data_Char
   716  076C                     l694:
   717                           
   718                           ;LCD_8bit.c: 62:     }
   719  076C  3001               	movlw	1
   720  076D  07F3               	addwf	LCD_Data_String@i,f
   721  076E  1803               	skipnc
   722  076F  0AF4               	incf	LCD_Data_String@i+1,f
   723  0770  3000               	movlw	0
   724  0771  07F4               	addwf	LCD_Data_String@i+1,f
   725  0772                     l696:
   726  0772  0873               	movf	LCD_Data_String@i,w
   727  0773  0775               	addwf	LCD_Data_String@str,w
   728  0774  0084               	movwf	4
   729  0775  120A  118A  2003  120A  118A  	fcall	stringdir
   730  077A  3A00               	xorlw	0
   731  077B  1D03               	skipz
   732  077C  2F7E               	goto	u81
   733  077D  2F7F               	goto	u80
   734  077E                     u81:
   735  077E  2F5F               	goto	l692
   736  077F                     u80:
   737  077F                     l28:
   738  077F  0008               	return
   739  0780                     __end_of_LCD_Data_String:
   740                           
   741                           	psect	text5
   742  072C                     __ptext5:	
   743 ;; *************** function _LCD_Data_Char *****************
   744 ;; Defined at:
   745 ;;		line 45 in file "LCD_8bit.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  data            1    wreg     unsigned char 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  data            1    2[COMMON] unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   759 ;;      Params:         0       0       0       0       0
   760 ;;      Locals:         1       0       0       0       0
   761 ;;      Temps:          2       0       0       0       0
   762 ;;      Totals:         3       0       0       0       0
   763 ;;Total ram usage:        3 bytes
   764 ;; Hardware stack levels used: 1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_LCD_Data_String
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _LCD_Data_Char
   774  072C                     _LCD_Data_Char:
   775                           
   776                           ;incstack = 0
   777                           ; Regs used in _LCD_Data_Char: [wreg]
   778                           ;LCD_Data_Char@data stored from wreg
   779  072C  00F2               	movwf	LCD_Data_Char@data
   780  072D                     l646:
   781                           
   782                           ;LCD_8bit.c: 45: void LCD_Data_Char(unsigned char data);LCD_8bit.c: 46: {;LCD_8bit.c: 47
      +                          :     RB0=1;
   783  072D  1283               	bcf	3,5	;RP0=0, select bank0
   784  072E  1303               	bcf	3,6	;RP1=0, select bank0
   785  072F  1406               	bsf	6,0	;volatile
   786                           
   787                           ;LCD_8bit.c: 48:     RB1=0;
   788  0730  1086               	bcf	6,1	;volatile
   789  0731                     l648:
   790                           
   791                           ;LCD_8bit.c: 49:     PORTC=data;
   792  0731  0872               	movf	LCD_Data_Char@data,w
   793  0732  0087               	movwf	7	;volatile
   794  0733                     l650:
   795                           
   796                           ;LCD_8bit.c: 50:     RB2=1;
   797  0733  1506               	bsf	6,2	;volatile
   798  0734                     l652:
   799                           
   800                           ;LCD_8bit.c: 51:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   801  0734  2F35               	nop2	;2 cycle nop
   802  0735  2F36               	nop2	;2 cycle nop
   803  0736  0000               	nop
   804  0737                     l654:
   805                           
   806                           ;LCD_8bit.c: 52:     RB2=0;
   807  0737  1283               	bcf	3,5	;RP0=0, select bank0
   808  0738  1303               	bcf	3,6	;RP1=0, select bank0
   809  0739  1106               	bcf	6,2	;volatile
   810                           
   811                           ;LCD_8bit.c: 53:     _delay((unsigned long)((1)*(20000000/4000.0)));
   812  073A  3007               	movlw	7
   813  073B  00F1               	movwf	??_LCD_Data_Char+1
   814  073C  307D               	movlw	125
   815  073D  00F0               	movwf	??_LCD_Data_Char
   816  073E                     u167:
   817  073E  0BF0               	decfsz	??_LCD_Data_Char,f
   818  073F  2F3E               	goto	u167
   819  0740  0BF1               	decfsz	??_LCD_Data_Char+1,f
   820  0741  2F3E               	goto	u167
   821  0742                     l22:
   822  0742  0008               	return
   823  0743                     __end_of_LCD_Data_Char:
   824  007E                     btemp	set	126	;btemp
   825  007E                     wtemp0	set	126
   826                           
   827                           	psect	config
   828                           
   829                           ;Config register CONFIG @ 0x2007
   830                           ;	Oscillator Selection bits
   831                           ;	FOSC = HS, HS oscillator
   832                           ;	Watchdog Timer Enable bit
   833                           ;	WDTE = OFF, WDT disabled
   834                           ;	Power-up Timer Enable bit
   835                           ;	PWRTE = OFF, PWRT disabled
   836                           ;	Brown-out Reset Enable bit
   837                           ;	BOREN = OFF, BOR disabled
   838                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   839                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   840                           ;	Data EEPROM Memory Code Protection bit
   841                           ;	CPD = OFF, Data EEPROM code protection off
   842                           ;	Flash Program Memory Write Enable bits
   843                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   844                           ;	In-Circuit Debugger Mode bit
   845                           ;	DEBUG = 0x1, unprogrammed default
   846                           ;	Flash Program Memory Code Protection bit
   847                           ;	CP = OFF, Code protection off
   848  2007                     	org	8199
   849  2007  3F3A               	dw	16186

Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Data_String@str	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_lcd_gotoxy
    _lcd_init->_LCD_Command
    _lcd_gotoxy->_LCD_Command
    _LCD_Data_String->_LCD_Data_Char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     496
                    _LCD_Data_String
                         _lcd_gotoxy
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           4     0      4     343
                                              3 COMMON     4     0      4
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Data_String                                      3     3      0     138
                                              3 COMMON     3     3      0
                      _LCD_Data_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Data_Char                                        3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Data_String
     _LCD_Data_Char
   _lcd_gotoxy
     _LCD_Command
   _lcd_init
     _LCD_Command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 29 10:39:02 2021

                       pc 0002              ?_LCD_Command 0070                        l22 0742  
                      l33 07FB                        l41 07A4                        l42 07A4  
                      l19 075A                        l28 077F                        l36 072B  
                      u80 077F            ?_LCD_Data_Char 0070                        u81 077E  
                      u90 07AE                        u91 07AD                        fsr 0004  
                     l700 07AE                       l710 07E5                       l702 07BB  
                     l640 074A                       l712 07F2                       l704 07C8  
                     l720 079E                       l650 0733                       l642 074B  
                     l706 07D1                       l714 0780                       l652 0734  
                     l644 074E                       l636 0744                       l708 07D8  
                     l716 078C                       l654 0737                       l646 072D  
                     l638 0748                       l718 0791                       l648 0731  
                     l680 0719                       l690 075C                       l692 075F  
                     l694 076C                       l696 0772                       l698 07A8  
                     _RB0 0030                       _RB1 0031                       _RB2 0032  
                     u100 07BB                       u101 07BA                       u110 07C8  
                     u111 07C7                       u120 07D8                       u121 07D7  
                     u105 07B7                       u130 07E5                       u131 07E4  
                     u115 07C4                       u140 07F2                       u141 07F1  
                     u135 07E1                       u145 07EE                       u157 0755  
                     u167 073E                       fsr0 0004               lcd_gotoxy@x 0073  
             lcd_gotoxy@y 0075                      STR_1 0009                      _main 0780  
                    btemp 007E                      start 0000          ?_LCD_Data_String 0070  
                   ?_main 0070                     _PORTB 0006                     _PORTC 0007  
                   _TRISB 0086                     _TRISC 0087                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 07FC  
            __end_of_main 07A8           ??_LCD_Data_Char 0070                    ??_main 0077  
        __end_of_lcd_init 072C      __size_of_LCD_Command 0018        LCD_Command@command 0072  
 __end_of__initialization 07FC            __pcstackCOMMON 0070                __pmaintext 0780  
              _lcd_gotoxy 07A8                 ?_lcd_init 0070                __stringtab 0003  
        LCD_Data_String@i 0073  __size_of_LCD_Data_String 0025                   __ptext1 0719  
                 __ptext2 07A8                   __ptext3 0743                   __ptext4 075B  
                 __ptext5 072C                ??_lcd_init 0073      end_of_initialization 07FC  
   __end_of_LCD_Data_Char 0743               ?_lcd_gotoxy 0073             ??_LCD_Command 0070  
     start_initialization 07FC         ??_LCD_Data_String 0073        LCD_Data_String@str 0075  
     __size_of_lcd_gotoxy 0054       __end_of_LCD_Command 075B                 ___latbits 0002  
       __size_of_lcd_init 0013         LCD_Data_Char@data 0072                 __pstrings 0003  
             _LCD_Command 0743               __stringbase 0008              ??_lcd_gotoxy 0077  
      __end_of_lcd_gotoxy 07FC           _LCD_Data_String 075B        __end_of__stringtab 0009  
                _lcd_init 0719    __size_of_LCD_Data_Char 0017             __size_of_main 0028  
 __end_of_LCD_Data_String 0780                 stringcode 0003             _LCD_Data_Char 072C  
                stringdir 0003                  stringtab 0003  
